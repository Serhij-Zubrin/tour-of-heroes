echo "üöÄ Starting deployment to GitHub Pages..."
set -e

# –ó–∞–ø–∞–º'—è—Ç–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—É –≥—ñ–ª–∫—É, —â–æ–± –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –ø—ñ—Å–ª—è –¥–µ–ø–ª–æ—é
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# –ó–±—É–¥—É–≤–∞—Ç–∏ –ø—Ä–æ–µ–∫—Ç –∑ –ø–æ—Ç–æ—á–Ω–æ—ó –≥—ñ–ª–∫–∏ (main/messages-component —Ç–æ—â–æ)
echo "üì¶ Building project..."
ng build --configuration production --base-href=/tour-of-heroes/

# Ensure build output exists
if [ ! -d "dist/tour-of-heroes" ]; then
  echo "‚ùå Build output not found at dist/tour-of-heroes. Abort."
  exit 1
fi

# –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–∏—Å—è –Ω–∞ –≥—ñ–ª–∫—É gh-pages –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
echo "üîÄ Switching to gh-pages branch..."
git checkout gh-pages

# Safety guard: allow destructive actions only on gh-pages
BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [ "$BRANCH" != "gh-pages" ]; then
  echo "‚ùå Refusing to deploy: current branch is '$BRANCH' (expected 'gh-pages')"
  echo "Tip: ensure checkout to gh-pages succeeded before cleaning/copying."
  exit 1
fi

# –°–∫–æ–ø—ñ—é–≤–∞—Ç–∏ —Ñ–∞–π–ª–∏ –≤ –∫–æ—Ä—ñ–Ω—å gh-pages
echo "üìÅ Copying files to root..."
# Optional: clean old files safely (keeps .git, CNAME, .nojekyll)
# find . -maxdepth 1 -mindepth 1 ! -name ".git" ! -name "CNAME" ! -name ".nojekyll" -exec rm -rf {} +
cp -r dist/tour-of-heroes/* .

# –î–æ–¥–∞—Ç–∏ —Ñ–∞–π–ª–∏ –¥–æ git
echo "üìù Adding files to git..."
git add .

# –ó—Ä–æ–±–∏—Ç–∏ –∫–æ–º—ñ—Ç
echo "üíæ Committing changes..."
git commit -m "Auto-deploy: $(date)" || echo "Nothing to commit"

# –ó–∞–ª–∏—Ç–∏ –Ω–∞ GitHub
echo "üåê Pushing to GitHub..."
git push origin gh-pages

# –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –Ω–∞ –ø–æ–ø–µ—Ä–µ–¥–Ω—é –≥—ñ–ª–∫—É
git checkout "$CURRENT_BRANCH"

echo "‚úÖ Deployment completed!"
echo "üåç Your site is available on the gh-pages branch."
echo "üåç Your site: https://serhij-zubrin.github.io/tour-of-heroes/"
